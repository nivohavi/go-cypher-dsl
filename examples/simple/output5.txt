Go Cypher DSL Example
---------------------
Example 1: Find Tom Hanks movies released after 2000
MATCH -[:`ACTED_IN`]->
  WHERE (('m'.released > $param1) AND ('p'.name = $param2))
  RETURN 'm'.title, 'm'.released
  ORDER BY 'm'.released DESC

Parameters: map[param1:2000 param2:Tom Hanks]

Example 2: Find movies where Tom Hanks acted but not directed by Spielberg
MATCH -[:`ACTED_IN`]-> OPTIONAL
  MATCH -[:`DIRECTED_BY`]->
  WHERE (('p'.name = $param3) AND ('d'.name <> $param4))
  RETURN 'm'.title, 'd'.name
  ORDER BY 'm'.title
  LIMIT 10

Parameters: map[param3:Tom Hanks param4:Steven Spielberg]
Debug CREATE pattern: (newPerson:`Person` {name: $param1, born: $param2})
Debug CREATE params: map[param1:Leonardo DiCaprio param2:1974]
Debug CREATE pattern: -[:`ACTED_IN`]->
Debug CREATE params: map[param1:Leonardo DiCaprio param2:1974 param3:Titanic]
Debug CREATE merged params: map[param1:Leonardo DiCaprio param2:1974 param3:Titanic]

Example 3: Create a person and relationship
CREATE (newPerson:`Person` {born: $param2, name: $param1})
  WITH (newPerson:`Person` {name: $param1, born: $param2})
  MATCH (titanic:`Movie` {title: $param3})
  CREATE -[:`ACTED_IN`]->
  SET 'newPerson'.oscars, $param4
  RETURN 'newPerson'.name, 'titanic'.title

Parameters: map[param1:Leonardo DiCaprio param2:1974 param3:Titanic param4:1]
